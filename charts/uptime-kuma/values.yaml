uptimeKuma:
  enabled: true
  replicaCount: 1

  image:
    repository: louislam/uptime-kuma
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.23.7"
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "uptime-kuma"

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3001

  # multiple ingresse can be defined to provide e.g. dashboads public. 
  # The config ui remains only accessible from certain whitelist range.
  # Ingress hostnames must match configured dashboard hostnames
  ingresses: {}
    # public:
    #   enabled: false
    #   className: ""
    #   annotations: {}
    #     # kubernetes.io/ingress.class: nginx
    #     # kubernetes.io/tls-acme: "true"
    #     # nginx.ingress.kubernetes.io/whitelist-source-range: '0.0.0.0/0,::/0'
    #     # haproxy-ingress.github.io/allowlist-source-range: '0.0.0.0/0,::/0'
    #   hosts:
    #     - host: chart-example.local
    #       paths:
    #         - path: /
    #           pathType: Prefix
    #   tls: []
    #   #  - secretName: chart-example-tls
    #   #    hosts:
    #   #      - chart-example.local
    # private:
    #   enabled: false
    #   className: ""
    #   annotations: {}
    #     # kubernetes.io/ingress.class: nginx
    #     # kubernetes.io/tls-acme: "true"
    #     # nginx.ingress.kubernetes.io/whitelist-source-range: '192.168.178.0/24'
    #     # haproxy-ingress.github.io/allowlist-source-range: '0.0.0.0/0,::/0'
    #   hosts:
    #     - host: chart-example.local
    #       paths:
    #         - path: /
    #           pathType: Prefix
    #   tls: []
    #   #  - secretName: chart-example-tls
    #   #    hosts:
    #   #      - chart-example.local

  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: '2'
      memory: 2Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param persistence.enabled Enable data persistence
    ##
    enabled: true
    ## @param persistence.existingClaim A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound.
    ## All replicas will share this PVC, using existingClaim with replicas > 1 is only useful in very special use cases.
    ## The value is evaluated as a template.
    ##
    existingClaim: ""
    ## @param persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ## set, choosing the default provisioner.
    ##
    storageClass: ""
    ## @param persistence.accessModes List of access modes of data volume
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.size Persistent Volume Claim size
    ##
    size: 8Gi
    ## @param persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param persistence.labels Persistent Volume Claim labels
    ##
    labels: {}
    ## @param persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}

  localtime: /usr/share/zoneinfo/UTC

signal:
  enabled: false
  replicaCount: 1

  image:
    repository: bbernhard/signal-cli-rest-api
    # Overrides the image tag whose default is the chart appVersion.
    tag: "0.70"
    pullPolicy: IfNotPresent

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: "signal-cli-rest-api"

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsGroup: 1000
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 8080

  env:
    - name: MODE
      value: normal
    - name: SIGNAL_CLI_UID
      value: '1000'
    - name: SIGNAL_CLI_GID
      value: '1000'
    - name: PORT
      value: '8080'
    - name: AUTO_RECEIVE_SCHEDULE
      value: '5 */6 * * *'

  # multiple ingresse can be defined to provide e.g. dashboads public. 
  # The config ui remains only accessible from certain whitelist range.
  # Ingress hostnames must match configured dashboard hostnames
  ingress:
    enabled: false
    # className: ""
    # annotations: {}
    #   # kubernetes.io/ingress.class: nginx
    #   # kubernetes.io/tls-acme: "true"
    #   # nginx.ingress.kubernetes.io/whitelist-source-range: '0.0.0.0/0,::/0'
    #   # haproxy-ingress.github.io/allowlist-source-range: '0.0.0.0/0,::/0'
    # hosts:
    #   - host: chart-example.local
    #     paths:
    #       - path: /
    #         pathType: Prefix
    # tls: []
    # #  - secretName: chart-example-tls
    # #    hosts:
    # #      - chart-example.local

  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: '2'
      memory: 2Gi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param persistence.enabled Enable data persistence
    ##
    enabled: true
    ## @param persistence.existingClaim A manually managed Persistent Volume and Claim
    ## If defined, PVC must be created manually before volume will be bound.
    ## All replicas will share this PVC, using existingClaim with replicas > 1 is only useful in very special use cases.
    ## The value is evaluated as a template.
    ##
    existingClaim: ""
    ## @param persistence.storageClass Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ## set, choosing the default provisioner.
    ##
    storageClass: ""
    ## @param persistence.accessModes List of access modes of data volume
    ##
    accessModes:
      - ReadWriteOnce
    ## @param persistence.size Persistent Volume Claim size
    ##
    size: 8Gi
    ## @param persistence.annotations Persistent Volume Claim annotations
    ##
    annotations: {}
    ## @param persistence.labels Persistent Volume Claim labels
    ##
    labels: {}
    ## @param persistence.selector Selector to match an existing Persistent Volume (this value is evaluated as a template)
    ## selector:
    ##   matchLabels:
    ##     app: my-app
    ##
    selector: {}

  localtime: /usr/share/zoneinfo/UTC